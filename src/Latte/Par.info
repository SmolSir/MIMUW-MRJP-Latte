-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from Latte/Par.y
-----------------------------------------------------------------------------

state 74 contains 1 shift/reduce conflicts.
state 148 contains 1 shift/reduce conflicts.

rule 45 is unused
rule 46 is unused
rule 47 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListTopDef                              (4)
	TopDef -> Type Ident '(' ListArg ')' Block         (5)
	TopDef -> 'class' Ident ClsExt '{' ListClsMem '}'   (6)
	ListTopDef -> TopDef                               (7)
	ListTopDef -> TopDef ListTopDef                    (8)
	ClsExt ->                                          (9)
	ClsExt -> 'extends' Ident                          (10)
	ClsMem -> Type Ident ';'                           (11)
	ClsMem -> Type Ident '(' ListArg ')' Block         (12)
	ListClsMem ->                                      (13)
	ListClsMem -> ClsMem ListClsMem                    (14)
	Arg -> Type Ident                                  (15)
	ListArg ->                                         (16)
	ListArg -> Arg                                     (17)
	ListArg -> Arg ',' ListArg                         (18)
	Block -> '{' ListStmt '}'                          (19)
	ListStmt ->                                        (20)
	ListStmt -> Stmt ListStmt                          (21)
	Stmt -> ';'                                        (22)
	Stmt -> Block                                      (23)
	Stmt -> Type ListItem ';'                          (24)
	Stmt -> Expr8 '=' Expr ';'                         (25)
	Stmt -> Expr8 '++' ';'                             (26)
	Stmt -> Expr8 '--' ';'                             (27)
	Stmt -> 'return' Expr ';'                          (28)
	Stmt -> 'return' ';'                               (29)
	Stmt -> 'if' '(' Expr ')' Stmt                     (30)
	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt         (31)
	Stmt -> 'while' '(' Expr ')' Stmt                  (32)
	Stmt -> 'for' '(' Type Ident ':' Expr ')' Stmt     (33)
	Stmt -> Expr ';'                                   (34)
	Item -> Ident                                      (35)
	Item -> Ident '=' Expr                             (36)
	ListItem -> Item                                   (37)
	ListItem -> Item ',' ListItem                      (38)
	Type -> 'int'                                      (39)
	Type -> 'string'                                   (40)
	Type -> 'boolean'                                  (41)
	Type -> 'void'                                     (42)
	Type -> Type '[]'                                  (43)
	Type -> Ident                                      (44)
	ListType ->                                        (45)
	ListType -> Type                                   (46)
	ListType -> Type ',' ListType                      (47)
	Expr8 -> Ident                                     (48)
	Expr8 -> Expr7 '[' Expr ']'                        (49)
	Expr8 -> Expr7 '.' Ident                           (50)
	Expr8 -> '(' Expr ')'                              (51)
	Expr7 -> Ident '(' ListExpr ')'                    (52)
	Expr7 -> Expr7 '.' Ident '(' ListExpr ')'          (53)
	Expr7 -> 'new' Type EArrLen                        (54)
	Expr7 -> Expr8                                     (55)
	EArrLen -> '[' Expr ']'                            (56)
	EArrLen ->                                         (57)
	Expr6 -> '(' Type ')null'                          (58)
	Expr6 -> Integer                                   (59)
	Expr6 -> 'true'                                    (60)
	Expr6 -> 'false'                                   (61)
	Expr6 -> String                                    (62)
	Expr6 -> Expr7                                     (63)
	Expr5 -> '-' Expr6                                 (64)
	Expr5 -> '!' Expr6                                 (65)
	Expr5 -> Expr6                                     (66)
	Expr4 -> Expr4 MulOp Expr5                         (67)
	Expr4 -> Expr5                                     (68)
	Expr3 -> Expr3 AddOp Expr4                         (69)
	Expr3 -> Expr4                                     (70)
	Expr2 -> Expr2 RelOp Expr3                         (71)
	Expr2 -> Expr3                                     (72)
	Expr1 -> Expr2 '&&' Expr1                          (73)
	Expr1 -> Expr2                                     (74)
	Expr -> Expr1 '||' Expr                            (75)
	Expr -> Expr1                                      (76)
	ListExpr ->                                        (77)
	ListExpr -> Expr                                   (78)
	ListExpr -> Expr ',' ListExpr                      (79)
	AddOp -> '+'                                       (80)
	AddOp -> '-'                                       (81)
	MulOp -> '*'                                       (82)
	MulOp -> '/'                                       (83)
	MulOp -> '%'                                       (84)
	RelOp -> '<'                                       (85)
	RelOp -> '<='                                      (86)
	RelOp -> '>'                                       (87)
	RelOp -> '>='                                      (88)
	RelOp -> '=='                                      (89)
	RelOp -> '!='                                      (90)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&&'           { PT _ (TS _ 4) }
	'('            { PT _ (TS _ 5) }
	')'            { PT _ (TS _ 6) }
	')null'        { PT _ (TS _ 7) }
	'*'            { PT _ (TS _ 8) }
	'+'            { PT _ (TS _ 9) }
	'++'           { PT _ (TS _ 10) }
	','            { PT _ (TS _ 11) }
	'-'            { PT _ (TS _ 12) }
	'--'           { PT _ (TS _ 13) }
	'.'            { PT _ (TS _ 14) }
	'/'            { PT _ (TS _ 15) }
	':'            { PT _ (TS _ 16) }
	';'            { PT _ (TS _ 17) }
	'<'            { PT _ (TS _ 18) }
	'<='           { PT _ (TS _ 19) }
	'='            { PT _ (TS _ 20) }
	'=='           { PT _ (TS _ 21) }
	'>'            { PT _ (TS _ 22) }
	'>='           { PT _ (TS _ 23) }
	'['            { PT _ (TS _ 24) }
	'[]'           { PT _ (TS _ 25) }
	']'            { PT _ (TS _ 26) }
	'boolean'      { PT _ (TS _ 27) }
	'class'        { PT _ (TS _ 28) }
	'else'         { PT _ (TS _ 29) }
	'extends'      { PT _ (TS _ 30) }
	'false'        { PT _ (TS _ 31) }
	'for'          { PT _ (TS _ 32) }
	'if'           { PT _ (TS _ 33) }
	'int'          { PT _ (TS _ 34) }
	'new'          { PT _ (TS _ 35) }
	'return'       { PT _ (TS _ 36) }
	'string'       { PT _ (TS _ 37) }
	'true'         { PT _ (TS _ 38) }
	'void'         { PT _ (TS _ 39) }
	'while'        { PT _ (TS _ 40) }
	'{'            { PT _ (TS _ 41) }
	'||'           { PT _ (TS _ 42) }
	'}'            { PT _ (TS _ 43) }
	L_Ident        { PT _ (TV $$) }
	L_integ        { PT _ (TI $$) }
	L_quoted       { PT _ (TL $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	TopDef          rules 5, 6
	ListTopDef      rules 7, 8
	ClsExt          rules 9, 10
	ClsMem          rules 11, 12
	ListClsMem      rules 13, 14
	Arg             rule  15
	ListArg         rules 16, 17, 18
	Block           rule  19
	ListStmt        rules 20, 21
	Stmt            rules 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34
	Item            rules 35, 36
	ListItem        rules 37, 38
	Type            rules 39, 40, 41, 42, 43, 44
	ListType        rules 45, 46, 47
	Expr8           rules 48, 49, 50, 51
	Expr7           rules 52, 53, 54, 55
	EArrLen         rules 56, 57
	Expr6           rules 58, 59, 60, 61, 62, 63
	Expr5           rules 64, 65, 66
	Expr4           rules 67, 68
	Expr3           rules 69, 70
	Expr2           rules 71, 72
	Expr1           rules 73, 74
	Expr            rules 75, 76
	ListExpr        rules 77, 78, 79
	AddOp           rules 80, 81
	MulOp           rules 82, 83, 84
	RelOp           rules 85, 86, 87, 88, 89, 90

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram -> . Program                        (rule 0)

	'boolean'      shift, and enter state 8
	'class'        shift, and enter state 9
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Program        goto state 4
	TopDef         goto state 5
	ListTopDef     goto state 6
	Type           goto state 7

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	')null'        reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'.'            reduce using rule 1
	'/'            reduce using rule 1
	':'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'['            reduce using rule 1
	'[]'           reduce using rule 1
	']'            reduce using rule 1
	'extends'      reduce using rule 1
	'{'            reduce using rule 1
	'||'           reduce using rule 1
	L_Ident        reduce using rule 1


State 3

	Type -> Ident .                                     (rule 44)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'&&'           reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'.'            reduce using rule 44
	'/'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'['            reduce using rule 44
	'[]'           reduce using rule 44
	']'            reduce using rule 44
	'||'           reduce using rule 44
	L_Ident        reduce using rule 44


State 4

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 5

	ListTopDef -> TopDef .                              (rule 7)
	ListTopDef -> TopDef . ListTopDef                   (rule 8)

	'boolean'      shift, and enter state 8
	'class'        shift, and enter state 9
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2
	%eof           reduce using rule 7

	Ident          goto state 3
	TopDef         goto state 5
	ListTopDef     goto state 16
	Type           goto state 7

State 6

	Program -> ListTopDef .                             (rule 4)

	%eof           reduce using rule 4


State 7

	TopDef -> Type . Ident '(' ListArg ')' Block        (rule 5)
	Type -> Type . '[]'                                 (rule 43)

	'[]'           shift, and enter state 15
	L_Ident        shift, and enter state 2

	Ident          goto state 14

State 8

	Type -> 'boolean' .                                 (rule 41)

	'!='           reduce using rule 41
	'%'            reduce using rule 41
	'&&'           reduce using rule 41
	')'            reduce using rule 41
	')null'        reduce using rule 41
	'*'            reduce using rule 41
	'+'            reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'.'            reduce using rule 41
	'/'            reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	'['            reduce using rule 41
	'[]'           reduce using rule 41
	']'            reduce using rule 41
	'||'           reduce using rule 41
	L_Ident        reduce using rule 41


State 9

	TopDef -> 'class' . Ident ClsExt '{' ListClsMem '}'    (rule 6)

	L_Ident        shift, and enter state 2

	Ident          goto state 13

State 10

	Type -> 'int' .                                     (rule 39)

	'!='           reduce using rule 39
	'%'            reduce using rule 39
	'&&'           reduce using rule 39
	')'            reduce using rule 39
	')null'        reduce using rule 39
	'*'            reduce using rule 39
	'+'            reduce using rule 39
	','            reduce using rule 39
	'-'            reduce using rule 39
	'.'            reduce using rule 39
	'/'            reduce using rule 39
	';'            reduce using rule 39
	'<'            reduce using rule 39
	'<='           reduce using rule 39
	'=='           reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	'['            reduce using rule 39
	'[]'           reduce using rule 39
	']'            reduce using rule 39
	'||'           reduce using rule 39
	L_Ident        reduce using rule 39


State 11

	Type -> 'string' .                                  (rule 40)

	'!='           reduce using rule 40
	'%'            reduce using rule 40
	'&&'           reduce using rule 40
	')'            reduce using rule 40
	')null'        reduce using rule 40
	'*'            reduce using rule 40
	'+'            reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	'.'            reduce using rule 40
	'/'            reduce using rule 40
	';'            reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	'['            reduce using rule 40
	'[]'           reduce using rule 40
	']'            reduce using rule 40
	'||'           reduce using rule 40
	L_Ident        reduce using rule 40


State 12

	Type -> 'void' .                                    (rule 42)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'&&'           reduce using rule 42
	')'            reduce using rule 42
	')null'        reduce using rule 42
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'.'            reduce using rule 42
	'/'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'['            reduce using rule 42
	'[]'           reduce using rule 42
	']'            reduce using rule 42
	'||'           reduce using rule 42
	L_Ident        reduce using rule 42


State 13

	TopDef -> 'class' Ident . ClsExt '{' ListClsMem '}'    (rule 6)

	'extends'      shift, and enter state 19
	'{'            reduce using rule 9

	ClsExt         goto state 18

State 14

	TopDef -> Type Ident . '(' ListArg ')' Block        (rule 5)

	'('            shift, and enter state 17


State 15

	Type -> Type '[]' .                                 (rule 43)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	')'            reduce using rule 43
	')null'        reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'.'            reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'['            reduce using rule 43
	'[]'           reduce using rule 43
	']'            reduce using rule 43
	'||'           reduce using rule 43
	L_Ident        reduce using rule 43


State 16

	ListTopDef -> TopDef ListTopDef .                   (rule 8)

	%eof           reduce using rule 8


State 17

	TopDef -> Type Ident '(' . ListArg ')' Block        (rule 5)

	')'            reduce using rule 16
	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 22
	ListArg        goto state 23
	Type           goto state 24

State 18

	TopDef -> 'class' Ident ClsExt . '{' ListClsMem '}'    (rule 6)

	'{'            shift, and enter state 21


State 19

	ClsExt -> 'extends' . Ident                         (rule 10)

	L_Ident        shift, and enter state 2

	Ident          goto state 20

State 20

	ClsExt -> 'extends' Ident .                         (rule 10)

	'{'            reduce using rule 10


State 21

	TopDef -> 'class' Ident ClsExt '{' . ListClsMem '}'    (rule 6)

	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	'}'            reduce using rule 13
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	ClsMem         goto state 28
	ListClsMem     goto state 29
	Type           goto state 30

State 22

	ListArg -> Arg .                                    (rule 17)
	ListArg -> Arg . ',' ListArg                        (rule 18)

	')'            reduce using rule 17
	','            shift, and enter state 27


State 23

	TopDef -> Type Ident '(' ListArg . ')' Block        (rule 5)

	')'            shift, and enter state 26


State 24

	Arg -> Type . Ident                                 (rule 15)
	Type -> Type . '[]'                                 (rule 43)

	'[]'           shift, and enter state 15
	L_Ident        shift, and enter state 2

	Ident          goto state 25

State 25

	Arg -> Type Ident .                                 (rule 15)

	')'            reduce using rule 15
	','            reduce using rule 15


State 26

	TopDef -> Type Ident '(' ListArg ')' . Block        (rule 5)

	'{'            shift, and enter state 36

	Block          goto state 35

State 27

	ListArg -> Arg ',' . ListArg                        (rule 18)

	')'            reduce using rule 16
	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 22
	ListArg        goto state 34
	Type           goto state 24

State 28

	ListClsMem -> ClsMem . ListClsMem                   (rule 14)

	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	'}'            reduce using rule 13
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	ClsMem         goto state 28
	ListClsMem     goto state 33
	Type           goto state 30

State 29

	TopDef -> 'class' Ident ClsExt '{' ListClsMem . '}'    (rule 6)

	'}'            shift, and enter state 32


State 30

	ClsMem -> Type . Ident ';'                          (rule 11)
	ClsMem -> Type . Ident '(' ListArg ')' Block        (rule 12)
	Type -> Type . '[]'                                 (rule 43)

	'[]'           shift, and enter state 15
	L_Ident        shift, and enter state 2

	Ident          goto state 31

State 31

	ClsMem -> Type Ident . ';'                          (rule 11)
	ClsMem -> Type Ident . '(' ListArg ')' Block        (rule 12)

	'('            shift, and enter state 66
	';'            shift, and enter state 67


State 32

	TopDef -> 'class' Ident ClsExt '{' ListClsMem '}' .    (rule 6)

	'boolean'      reduce using rule 6
	'class'        reduce using rule 6
	'int'          reduce using rule 6
	'string'       reduce using rule 6
	'void'         reduce using rule 6
	L_Ident        reduce using rule 6
	%eof           reduce using rule 6


State 33

	ListClsMem -> ClsMem ListClsMem .                   (rule 14)

	'}'            reduce using rule 14


State 34

	ListArg -> Arg ',' ListArg .                        (rule 18)

	')'            reduce using rule 18


State 35

	TopDef -> Type Ident '(' ListArg ')' Block .        (rule 5)

	'boolean'      reduce using rule 5
	'class'        reduce using rule 5
	'int'          reduce using rule 5
	'string'       reduce using rule 5
	'void'         reduce using rule 5
	L_Ident        reduce using rule 5
	%eof           reduce using rule 5


State 36

	Block -> '{' . ListStmt '}'                         (rule 19)

	'!'            shift, and enter state 53
	'('            shift, and enter state 54
	'-'            shift, and enter state 55
	';'            shift, and enter state 56
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 57
	'for'          shift, and enter state 58
	'if'           shift, and enter state 59
	'int'          shift, and enter state 10
	'new'          shift, and enter state 60
	'return'       shift, and enter state 61
	'string'       shift, and enter state 11
	'true'         shift, and enter state 62
	'void'         shift, and enter state 12
	'while'        shift, and enter state 63
	'{'            shift, and enter state 36
	'}'            reduce using rule 20
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_quoted       shift, and enter state 65

	Ident          goto state 37
	Integer        goto state 38
	String         goto state 39
	Block          goto state 40
	ListStmt       goto state 41
	Stmt           goto state 42
	Type           goto state 43
	Expr8          goto state 44
	Expr7          goto state 45
	Expr6          goto state 46
	Expr5          goto state 47
	Expr4          goto state 48
	Expr3          goto state 49
	Expr2          goto state 50
	Expr1          goto state 51
	Expr           goto state 52

State 37

	Type -> Ident .                                     (rule 44)
	Expr8 -> Ident .                                    (rule 48)
	Expr7 -> Ident . '(' ListExpr ')'                   (rule 52)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	'('            shift, and enter state 108
	')'            reduce using rule 48
	')null'        reduce using rule 44
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	'++'           reduce using rule 48
	'-'            reduce using rule 48
	'--'           reduce using rule 48
	'.'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'='            reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'['            reduce using rule 48
	'[]'           reduce using rule 44
	'||'           reduce using rule 48
	L_Ident        reduce using rule 44


State 38

	Expr6 -> Integer .                                  (rule 59)

	'!='           reduce using rule 59
	'%'            reduce using rule 59
	'&&'           reduce using rule 59
	')'            reduce using rule 59
	'*'            reduce using rule 59
	'+'            reduce using rule 59
	','            reduce using rule 59
	'-'            reduce using rule 59
	'/'            reduce using rule 59
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	']'            reduce using rule 59
	'||'           reduce using rule 59


State 39

	Expr6 -> String .                                   (rule 62)

	'!='           reduce using rule 62
	'%'            reduce using rule 62
	'&&'           reduce using rule 62
	')'            reduce using rule 62
	'*'            reduce using rule 62
	'+'            reduce using rule 62
	','            reduce using rule 62
	'-'            reduce using rule 62
	'/'            reduce using rule 62
	';'            reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'=='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	']'            reduce using rule 62
	'||'           reduce using rule 62


State 40

	Stmt -> Block .                                     (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'boolean'      reduce using rule 23
	'else'         reduce using rule 23
	'false'        reduce using rule 23
	'for'          reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'new'          reduce using rule 23
	'return'       reduce using rule 23
	'string'       reduce using rule 23
	'true'         reduce using rule 23
	'void'         reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_Ident        reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23


State 41

	Block -> '{' ListStmt . '}'                         (rule 19)

	'}'            shift, and enter state 107


State 42

	ListStmt -> Stmt . ListStmt                         (rule 21)

	'!'            shift, and enter state 53
	'('            shift, and enter state 54
	'-'            shift, and enter state 55
	';'            shift, and enter state 56
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 57
	'for'          shift, and enter state 58
	'if'           shift, and enter state 59
	'int'          shift, and enter state 10
	'new'          shift, and enter state 60
	'return'       shift, and enter state 61
	'string'       shift, and enter state 11
	'true'         shift, and enter state 62
	'void'         shift, and enter state 12
	'while'        shift, and enter state 63
	'{'            shift, and enter state 36
	'}'            reduce using rule 20
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_quoted       shift, and enter state 65

	Ident          goto state 37
	Integer        goto state 38
	String         goto state 39
	Block          goto state 40
	ListStmt       goto state 106
	Stmt           goto state 42
	Type           goto state 43
	Expr8          goto state 44
	Expr7          goto state 45
	Expr6          goto state 46
	Expr5          goto state 47
	Expr4          goto state 48
	Expr3          goto state 49
	Expr2          goto state 50
	Expr1          goto state 51
	Expr           goto state 52

State 43

	Stmt -> Type . ListItem ';'                         (rule 24)
	Type -> Type . '[]'                                 (rule 43)

	'[]'           shift, and enter state 15
	L_Ident        shift, and enter state 2

	Ident          goto state 103
	Item           goto state 104
	ListItem       goto state 105

State 44

	Stmt -> Expr8 . '=' Expr ';'                        (rule 25)
	Stmt -> Expr8 . '++' ';'                            (rule 26)
	Stmt -> Expr8 . '--' ';'                            (rule 27)
	Expr7 -> Expr8 .                                    (rule 55)

	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'&&'           reduce using rule 55
	'*'            reduce using rule 55
	'+'            reduce using rule 55
	'++'           shift, and enter state 100
	'-'            reduce using rule 55
	'--'           shift, and enter state 101
	'.'            reduce using rule 55
	'/'            reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'='            shift, and enter state 102
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'['            reduce using rule 55
	'||'           reduce using rule 55


State 45

	Expr8 -> Expr7 . '[' Expr ']'                       (rule 49)
	Expr8 -> Expr7 . '.' Ident                          (rule 50)
	Expr7 -> Expr7 . '.' Ident '(' ListExpr ')'         (rule 53)
	Expr6 -> Expr7 .                                    (rule 63)

	'!='           reduce using rule 63
	'%'            reduce using rule 63
	'&&'           reduce using rule 63
	')'            reduce using rule 63
	'*'            reduce using rule 63
	'+'            reduce using rule 63
	','            reduce using rule 63
	'-'            reduce using rule 63
	'.'            shift, and enter state 98
	'/'            reduce using rule 63
	';'            reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'=='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	'['            shift, and enter state 99
	']'            reduce using rule 63
	'||'           reduce using rule 63


State 46

	Expr5 -> Expr6 .                                    (rule 66)

	'!='           reduce using rule 66
	'%'            reduce using rule 66
	'&&'           reduce using rule 66
	')'            reduce using rule 66
	'*'            reduce using rule 66
	'+'            reduce using rule 66
	','            reduce using rule 66
	'-'            reduce using rule 66
	'/'            reduce using rule 66
	';'            reduce using rule 66
	'<'            reduce using rule 66
	'<='           reduce using rule 66
	'=='           reduce using rule 66
	'>'            reduce using rule 66
	'>='           reduce using rule 66
	']'            reduce using rule 66
	'||'           reduce using rule 66


State 47

	Expr4 -> Expr5 .                                    (rule 68)

	'!='           reduce using rule 68
	'%'            reduce using rule 68
	'&&'           reduce using rule 68
	')'            reduce using rule 68
	'*'            reduce using rule 68
	'+'            reduce using rule 68
	','            reduce using rule 68
	'-'            reduce using rule 68
	'/'            reduce using rule 68
	';'            reduce using rule 68
	'<'            reduce using rule 68
	'<='           reduce using rule 68
	'=='           reduce using rule 68
	'>'            reduce using rule 68
	'>='           reduce using rule 68
	']'            reduce using rule 68
	'||'           reduce using rule 68


State 48

	Expr4 -> Expr4 . MulOp Expr5                        (rule 67)
	Expr3 -> Expr4 .                                    (rule 70)

	'!='           reduce using rule 70
	'%'            shift, and enter state 95
	'&&'           reduce using rule 70
	')'            reduce using rule 70
	'*'            shift, and enter state 96
	'+'            reduce using rule 70
	','            reduce using rule 70
	'-'            reduce using rule 70
	'/'            shift, and enter state 97
	';'            reduce using rule 70
	'<'            reduce using rule 70
	'<='           reduce using rule 70
	'=='           reduce using rule 70
	'>'            reduce using rule 70
	'>='           reduce using rule 70
	']'            reduce using rule 70
	'||'           reduce using rule 70

	MulOp          goto state 94

State 49

	Expr3 -> Expr3 . AddOp Expr4                        (rule 69)
	Expr2 -> Expr3 .                                    (rule 72)

	'!='           reduce using rule 72
	'&&'           reduce using rule 72
	')'            reduce using rule 72
	'+'            shift, and enter state 92
	','            reduce using rule 72
	'-'            shift, and enter state 93
	';'            reduce using rule 72
	'<'            reduce using rule 72
	'<='           reduce using rule 72
	'=='           reduce using rule 72
	'>'            reduce using rule 72
	'>='           reduce using rule 72
	']'            reduce using rule 72
	'||'           reduce using rule 72

	AddOp          goto state 91

State 50

	Expr2 -> Expr2 . RelOp Expr3                        (rule 71)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 73)
	Expr1 -> Expr2 .                                    (rule 74)

	'!='           shift, and enter state 84
	'&&'           shift, and enter state 85
	')'            reduce using rule 74
	','            reduce using rule 74
	';'            reduce using rule 74
	'<'            shift, and enter state 86
	'<='           shift, and enter state 87
	'=='           shift, and enter state 88
	'>'            shift, and enter state 89
	'>='           shift, and enter state 90
	']'            reduce using rule 74
	'||'           reduce using rule 74

	RelOp          goto state 83

State 51

	Expr -> Expr1 . '||' Expr                           (rule 75)
	Expr -> Expr1 .                                     (rule 76)

	')'            reduce using rule 76
	','            reduce using rule 76
	';'            reduce using rule 76
	']'            reduce using rule 76
	'||'           shift, and enter state 82


State 52

	Stmt -> Expr . ';'                                  (rule 34)

	';'            shift, and enter state 81


State 53

	Expr5 -> '!' . Expr6                                (rule 65)

	'('            shift, and enter state 54
	'false'        shift, and enter state 57
	'new'          shift, and enter state 60
	'true'         shift, and enter state 62
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_quoted       shift, and enter state 65

	Ident          goto state 70
	Integer        goto state 38
	String         goto state 39
	Expr8          goto state 71
	Expr7          goto state 45
	Expr6          goto state 80

State 54

	Expr8 -> '(' . Expr ')'                             (rule 51)
	Expr6 -> '(' . Type ')null'                         (rule 58)

	'!'            shift, and enter state 53
	'('            shift, and enter state 54
	'-'            shift, and enter state 55
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 57
	'int'          shift, and enter state 10
	'new'          shift, and enter state 60
	'string'       shift, and enter state 11
	'true'         shift, and enter state 62
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_quoted       shift, and enter state 65

	Ident          goto state 37
	Integer        goto state 38
	String         goto state 39
	Type           goto state 78
	Expr8          goto state 71
	Expr7          goto state 45
	Expr6          goto state 46
	Expr5          goto state 47
	Expr4          goto state 48
	Expr3          goto state 49
	Expr2          goto state 50
	Expr1          goto state 51
	Expr           goto state 79

State 55

	Expr5 -> '-' . Expr6                                (rule 64)

	'('            shift, and enter state 54
	'false'        shift, and enter state 57
	'new'          shift, and enter state 60
	'true'         shift, and enter state 62
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_quoted       shift, and enter state 65

	Ident          goto state 70
	Integer        goto state 38
	String         goto state 39
	Expr8          goto state 71
	Expr7          goto state 45
	Expr6          goto state 77

State 56

	Stmt -> ';' .                                       (rule 22)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'boolean'      reduce using rule 22
	'else'         reduce using rule 22
	'false'        reduce using rule 22
	'for'          reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'new'          reduce using rule 22
	'return'       reduce using rule 22
	'string'       reduce using rule 22
	'true'         reduce using rule 22
	'void'         reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	L_Ident        reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22


State 57

	Expr6 -> 'false' .                                  (rule 61)

	'!='           reduce using rule 61
	'%'            reduce using rule 61
	'&&'           reduce using rule 61
	')'            reduce using rule 61
	'*'            reduce using rule 61
	'+'            reduce using rule 61
	','            reduce using rule 61
	'-'            reduce using rule 61
	'/'            reduce using rule 61
	';'            reduce using rule 61
	'<'            reduce using rule 61
	'<='           reduce using rule 61
	'=='           reduce using rule 61
	'>'            reduce using rule 61
	'>='           reduce using rule 61
	']'            reduce using rule 61
	'||'           reduce using rule 61


State 58

	Stmt -> 'for' . '(' Type Ident ':' Expr ')' Stmt    (rule 33)

	'('            shift, and enter state 76


State 59

	Stmt -> 'if' . '(' Expr ')' Stmt                    (rule 30)
	Stmt -> 'if' . '(' Expr ')' Stmt 'else' Stmt        (rule 31)

	'('            shift, and enter state 75


State 60

	Expr7 -> 'new' . Type EArrLen                       (rule 54)

	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Type           goto state 74

State 61

	Stmt -> 'return' . Expr ';'                         (rule 28)
	Stmt -> 'return' . ';'                              (rule 29)

	'!'            shift, and enter state 53
	'('            shift, and enter state 54
	'-'            shift, and enter state 55
	';'            shift, and enter state 73
	'false'        shift, and enter state 57
	'new'          shift, and enter state 60
	'true'         shift, and enter state 62
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_quoted       shift, and enter state 65

	Ident          goto state 70
	Integer        goto state 38
	String         goto state 39
	Expr8          goto state 71
	Expr7          goto state 45
	Expr6          goto state 46
	Expr5          goto state 47
	Expr4          goto state 48
	Expr3          goto state 49
	Expr2          goto state 50
	Expr1          goto state 51
	Expr           goto state 72

State 62

	Expr6 -> 'true' .                                   (rule 60)

	'!='           reduce using rule 60
	'%'            reduce using rule 60
	'&&'           reduce using rule 60
	')'            reduce using rule 60
	'*'            reduce using rule 60
	'+'            reduce using rule 60
	','            reduce using rule 60
	'-'            reduce using rule 60
	'/'            reduce using rule 60
	';'            reduce using rule 60
	'<'            reduce using rule 60
	'<='           reduce using rule 60
	'=='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	']'            reduce using rule 60
	'||'           reduce using rule 60


State 63

	Stmt -> 'while' . '(' Expr ')' Stmt                 (rule 32)

	'('            shift, and enter state 69


State 64

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	']'            reduce using rule 2
	'||'           reduce using rule 2


State 65

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	']'            reduce using rule 3
	'||'           reduce using rule 3


State 66

	ClsMem -> Type Ident '(' . ListArg ')' Block        (rule 12)

	')'            reduce using rule 16
	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 22
	ListArg        goto state 68
	Type           goto state 24

State 67

	ClsMem -> Type Ident ';' .                          (rule 11)

	'boolean'      reduce using rule 11
	'int'          reduce using rule 11
	'string'       reduce using rule 11
	'void'         reduce using rule 11
	'}'            reduce using rule 11
	L_Ident        reduce using rule 11


State 68

	ClsMem -> Type Ident '(' ListArg . ')' Block        (rule 12)

	')'            shift, and enter state 132


State 69

	Stmt -> 'while' '(' . Expr ')' Stmt                 (rule 32)

	'!'            shift, and enter state 53
	'('            shift, and enter state 54
	'-'            shift, and enter state 55
	'false'        shift, and enter state 57
	'new'          shift, and enter state 60
	'true'         shift, and enter state 62
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_quoted       shift, and enter state 65

	Ident          goto state 70
	Integer        goto state 38
	String         goto state 39
	Expr8          goto state 71
	Expr7          goto state 45
	Expr6          goto state 46
	Expr5          goto state 47
	Expr4          goto state 48
	Expr3          goto state 49
	Expr2          goto state 50
	Expr1          goto state 51
	Expr           goto state 131

State 70

	Expr8 -> Ident .                                    (rule 48)
	Expr7 -> Ident . '(' ListExpr ')'                   (rule 52)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	'('            shift, and enter state 108
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'.'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'['            reduce using rule 48
	']'            reduce using rule 48
	'||'           reduce using rule 48


State 71

	Expr7 -> Expr8 .                                    (rule 55)

	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'&&'           reduce using rule 55
	')'            reduce using rule 55
	'*'            reduce using rule 55
	'+'            reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'.'            reduce using rule 55
	'/'            reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'['            reduce using rule 55
	']'            reduce using rule 55
	'||'           reduce using rule 55


State 72

	Stmt -> 'return' Expr . ';'                         (rule 28)

	';'            shift, and enter state 130


State 73

	Stmt -> 'return' ';' .                              (rule 29)

	'!'            reduce using rule 29
	'('            reduce using rule 29
	'-'            reduce using rule 29
	';'            reduce using rule 29
	'boolean'      reduce using rule 29
	'else'         reduce using rule 29
	'false'        reduce using rule 29
	'for'          reduce using rule 29
	'if'           reduce using rule 29
	'int'          reduce using rule 29
	'new'          reduce using rule 29
	'return'       reduce using rule 29
	'string'       reduce using rule 29
	'true'         reduce using rule 29
	'void'         reduce using rule 29
	'while'        reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	L_Ident        reduce using rule 29
	L_integ        reduce using rule 29
	L_quoted       reduce using rule 29


State 74

	Type -> Type . '[]'                                 (rule 43)
	Expr7 -> 'new' Type . EArrLen                       (rule 54)

	'!='           reduce using rule 57
	'%'            reduce using rule 57
	'&&'           reduce using rule 57
	')'            reduce using rule 57
	'*'            reduce using rule 57
	'+'            reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'.'            reduce using rule 57
	'/'            reduce using rule 57
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	'['            shift, and enter state 129
			(reduce using rule 57)

	'[]'           shift, and enter state 15
	']'            reduce using rule 57
	'||'           reduce using rule 57

	EArrLen        goto state 128

State 75

	Stmt -> 'if' '(' . Expr ')' Stmt                    (rule 30)
	Stmt -> 'if' '(' . Expr ')' Stmt 'else' Stmt        (rule 31)

	'!'            shift, and enter state 53
	'('            shift, and enter state 54
	'-'            shift, and enter state 55
	'false'        shift, and enter state 57
	'new'          shift, and enter state 60
	'true'         shift, and enter state 62
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_quoted       shift, and enter state 65

	Ident          goto state 70
	Integer        goto state 38
	String         goto state 39
	Expr8          goto state 71
	Expr7          goto state 45
	Expr6          goto state 46
	Expr5          goto state 47
	Expr4          goto state 48
	Expr3          goto state 49
	Expr2          goto state 50
	Expr1          goto state 51
	Expr           goto state 127

State 76

	Stmt -> 'for' '(' . Type Ident ':' Expr ')' Stmt    (rule 33)

	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Type           goto state 126

State 77

	Expr5 -> '-' Expr6 .                                (rule 64)

	'!='           reduce using rule 64
	'%'            reduce using rule 64
	'&&'           reduce using rule 64
	')'            reduce using rule 64
	'*'            reduce using rule 64
	'+'            reduce using rule 64
	','            reduce using rule 64
	'-'            reduce using rule 64
	'/'            reduce using rule 64
	';'            reduce using rule 64
	'<'            reduce using rule 64
	'<='           reduce using rule 64
	'=='           reduce using rule 64
	'>'            reduce using rule 64
	'>='           reduce using rule 64
	']'            reduce using rule 64
	'||'           reduce using rule 64


State 78

	Type -> Type . '[]'                                 (rule 43)
	Expr6 -> '(' Type . ')null'                         (rule 58)

	')null'        shift, and enter state 125
	'[]'           shift, and enter state 15


State 79

	Expr8 -> '(' Expr . ')'                             (rule 51)

	')'            shift, and enter state 124


State 80

	Expr5 -> '!' Expr6 .                                (rule 65)

	'!='           reduce using rule 65
	'%'            reduce using rule 65
	'&&'           reduce using rule 65
	')'            reduce using rule 65
	'*'            reduce using rule 65
	'+'            reduce using rule 65
	','            reduce using rule 65
	'-'            reduce using rule 65
	'/'            reduce using rule 65
	';'            reduce using rule 65
	'<'            reduce using rule 65
	'<='           reduce using rule 65
	'=='           reduce using rule 65
	'>'            reduce using rule 65
	'>='           reduce using rule 65
	']'            reduce using rule 65
	'||'           reduce using rule 65


State 81

	Stmt -> Expr ';' .                                  (rule 34)

	'!'            reduce using rule 34
	'('            reduce using rule 34
	'-'            reduce using rule 34
	';'            reduce using rule 34
	'boolean'      reduce using rule 34
	'else'         reduce using rule 34
	'false'        reduce using rule 34
	'for'          reduce using rule 34
	'if'           reduce using rule 34
	'int'          reduce using rule 34
	'new'          reduce using rule 34
	'return'       reduce using rule 34
	'string'       reduce using rule 34
	'true'         reduce using rule 34
	'void'         reduce using rule 34
	'while'        reduce using rule 34
	'{'            reduce using rule 34
	'}'            reduce using rule 34
	L_Ident        reduce using rule 34
	L_integ        reduce using rule 34
	L_quoted       reduce using rule 34


State 82

	Expr -> Expr1 '||' . Expr                           (rule 75)

	'!'            shift, and enter state 53
	'('            shift, and enter state 54
	'-'            shift, and enter state 55
	'false'        shift, and enter state 57
	'new'          shift, and enter state 60
	'true'         shift, and enter state 62
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_quoted       shift, and enter state 65

	Ident          goto state 70
	Integer        goto state 38
	String         goto state 39
	Expr8          goto state 71
	Expr7          goto state 45
	Expr6          goto state 46
	Expr5          goto state 47
	Expr4          goto state 48
	Expr3          goto state 49
	Expr2          goto state 50
	Expr1          goto state 51
	Expr           goto state 123

State 83

	Expr2 -> Expr2 RelOp . Expr3                        (rule 71)

	'!'            shift, and enter state 53
	'('            shift, and enter state 54
	'-'            shift, and enter state 55
	'false'        shift, and enter state 57
	'new'          shift, and enter state 60
	'true'         shift, and enter state 62
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_quoted       shift, and enter state 65

	Ident          goto state 70
	Integer        goto state 38
	String         goto state 39
	Expr8          goto state 71
	Expr7          goto state 45
	Expr6          goto state 46
	Expr5          goto state 47
	Expr4          goto state 48
	Expr3          goto state 122

State 84

	RelOp -> '!=' .                                     (rule 90)

	'!'            reduce using rule 90
	'('            reduce using rule 90
	'-'            reduce using rule 90
	'false'        reduce using rule 90
	'new'          reduce using rule 90
	'true'         reduce using rule 90
	L_Ident        reduce using rule 90
	L_integ        reduce using rule 90
	L_quoted       reduce using rule 90


State 85

	Expr1 -> Expr2 '&&' . Expr1                         (rule 73)

	'!'            shift, and enter state 53
	'('            shift, and enter state 54
	'-'            shift, and enter state 55
	'false'        shift, and enter state 57
	'new'          shift, and enter state 60
	'true'         shift, and enter state 62
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_quoted       shift, and enter state 65

	Ident          goto state 70
	Integer        goto state 38
	String         goto state 39
	Expr8          goto state 71
	Expr7          goto state 45
	Expr6          goto state 46
	Expr5          goto state 47
	Expr4          goto state 48
	Expr3          goto state 49
	Expr2          goto state 50
	Expr1          goto state 121

State 86

	RelOp -> '<' .                                      (rule 85)

	'!'            reduce using rule 85
	'('            reduce using rule 85
	'-'            reduce using rule 85
	'false'        reduce using rule 85
	'new'          reduce using rule 85
	'true'         reduce using rule 85
	L_Ident        reduce using rule 85
	L_integ        reduce using rule 85
	L_quoted       reduce using rule 85


State 87

	RelOp -> '<=' .                                     (rule 86)

	'!'            reduce using rule 86
	'('            reduce using rule 86
	'-'            reduce using rule 86
	'false'        reduce using rule 86
	'new'          reduce using rule 86
	'true'         reduce using rule 86
	L_Ident        reduce using rule 86
	L_integ        reduce using rule 86
	L_quoted       reduce using rule 86


State 88

	RelOp -> '==' .                                     (rule 89)

	'!'            reduce using rule 89
	'('            reduce using rule 89
	'-'            reduce using rule 89
	'false'        reduce using rule 89
	'new'          reduce using rule 89
	'true'         reduce using rule 89
	L_Ident        reduce using rule 89
	L_integ        reduce using rule 89
	L_quoted       reduce using rule 89


State 89

	RelOp -> '>' .                                      (rule 87)

	'!'            reduce using rule 87
	'('            reduce using rule 87
	'-'            reduce using rule 87
	'false'        reduce using rule 87
	'new'          reduce using rule 87
	'true'         reduce using rule 87
	L_Ident        reduce using rule 87
	L_integ        reduce using rule 87
	L_quoted       reduce using rule 87


State 90

	RelOp -> '>=' .                                     (rule 88)

	'!'            reduce using rule 88
	'('            reduce using rule 88
	'-'            reduce using rule 88
	'false'        reduce using rule 88
	'new'          reduce using rule 88
	'true'         reduce using rule 88
	L_Ident        reduce using rule 88
	L_integ        reduce using rule 88
	L_quoted       reduce using rule 88


State 91

	Expr3 -> Expr3 AddOp . Expr4                        (rule 69)

	'!'            shift, and enter state 53
	'('            shift, and enter state 54
	'-'            shift, and enter state 55
	'false'        shift, and enter state 57
	'new'          shift, and enter state 60
	'true'         shift, and enter state 62
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_quoted       shift, and enter state 65

	Ident          goto state 70
	Integer        goto state 38
	String         goto state 39
	Expr8          goto state 71
	Expr7          goto state 45
	Expr6          goto state 46
	Expr5          goto state 47
	Expr4          goto state 120

State 92

	AddOp -> '+' .                                      (rule 80)

	'!'            reduce using rule 80
	'('            reduce using rule 80
	'-'            reduce using rule 80
	'false'        reduce using rule 80
	'new'          reduce using rule 80
	'true'         reduce using rule 80
	L_Ident        reduce using rule 80
	L_integ        reduce using rule 80
	L_quoted       reduce using rule 80


State 93

	AddOp -> '-' .                                      (rule 81)

	'!'            reduce using rule 81
	'('            reduce using rule 81
	'-'            reduce using rule 81
	'false'        reduce using rule 81
	'new'          reduce using rule 81
	'true'         reduce using rule 81
	L_Ident        reduce using rule 81
	L_integ        reduce using rule 81
	L_quoted       reduce using rule 81


State 94

	Expr4 -> Expr4 MulOp . Expr5                        (rule 67)

	'!'            shift, and enter state 53
	'('            shift, and enter state 54
	'-'            shift, and enter state 55
	'false'        shift, and enter state 57
	'new'          shift, and enter state 60
	'true'         shift, and enter state 62
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_quoted       shift, and enter state 65

	Ident          goto state 70
	Integer        goto state 38
	String         goto state 39
	Expr8          goto state 71
	Expr7          goto state 45
	Expr6          goto state 46
	Expr5          goto state 119

State 95

	MulOp -> '%' .                                      (rule 84)

	'!'            reduce using rule 84
	'('            reduce using rule 84
	'-'            reduce using rule 84
	'false'        reduce using rule 84
	'new'          reduce using rule 84
	'true'         reduce using rule 84
	L_Ident        reduce using rule 84
	L_integ        reduce using rule 84
	L_quoted       reduce using rule 84


State 96

	MulOp -> '*' .                                      (rule 82)

	'!'            reduce using rule 82
	'('            reduce using rule 82
	'-'            reduce using rule 82
	'false'        reduce using rule 82
	'new'          reduce using rule 82
	'true'         reduce using rule 82
	L_Ident        reduce using rule 82
	L_integ        reduce using rule 82
	L_quoted       reduce using rule 82


State 97

	MulOp -> '/' .                                      (rule 83)

	'!'            reduce using rule 83
	'('            reduce using rule 83
	'-'            reduce using rule 83
	'false'        reduce using rule 83
	'new'          reduce using rule 83
	'true'         reduce using rule 83
	L_Ident        reduce using rule 83
	L_integ        reduce using rule 83
	L_quoted       reduce using rule 83


State 98

	Expr8 -> Expr7 '.' . Ident                          (rule 50)
	Expr7 -> Expr7 '.' . Ident '(' ListExpr ')'         (rule 53)

	L_Ident        shift, and enter state 2

	Ident          goto state 118

State 99

	Expr8 -> Expr7 '[' . Expr ']'                       (rule 49)

	'!'            shift, and enter state 53
	'('            shift, and enter state 54
	'-'            shift, and enter state 55
	'false'        shift, and enter state 57
	'new'          shift, and enter state 60
	'true'         shift, and enter state 62
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_quoted       shift, and enter state 65

	Ident          goto state 70
	Integer        goto state 38
	String         goto state 39
	Expr8          goto state 71
	Expr7          goto state 45
	Expr6          goto state 46
	Expr5          goto state 47
	Expr4          goto state 48
	Expr3          goto state 49
	Expr2          goto state 50
	Expr1          goto state 51
	Expr           goto state 117

State 100

	Stmt -> Expr8 '++' . ';'                            (rule 26)

	';'            shift, and enter state 116


State 101

	Stmt -> Expr8 '--' . ';'                            (rule 27)

	';'            shift, and enter state 115


State 102

	Stmt -> Expr8 '=' . Expr ';'                        (rule 25)

	'!'            shift, and enter state 53
	'('            shift, and enter state 54
	'-'            shift, and enter state 55
	'false'        shift, and enter state 57
	'new'          shift, and enter state 60
	'true'         shift, and enter state 62
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_quoted       shift, and enter state 65

	Ident          goto state 70
	Integer        goto state 38
	String         goto state 39
	Expr8          goto state 71
	Expr7          goto state 45
	Expr6          goto state 46
	Expr5          goto state 47
	Expr4          goto state 48
	Expr3          goto state 49
	Expr2          goto state 50
	Expr1          goto state 51
	Expr           goto state 114

State 103

	Item -> Ident .                                     (rule 35)
	Item -> Ident . '=' Expr                            (rule 36)

	','            reduce using rule 35
	';'            reduce using rule 35
	'='            shift, and enter state 113


State 104

	ListItem -> Item .                                  (rule 37)
	ListItem -> Item . ',' ListItem                     (rule 38)

	','            shift, and enter state 112
	';'            reduce using rule 37


State 105

	Stmt -> Type ListItem . ';'                         (rule 24)

	';'            shift, and enter state 111


State 106

	ListStmt -> Stmt ListStmt .                         (rule 21)

	'}'            reduce using rule 21


State 107

	Block -> '{' ListStmt '}' .                         (rule 19)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'-'            reduce using rule 19
	';'            reduce using rule 19
	'boolean'      reduce using rule 19
	'class'        reduce using rule 19
	'else'         reduce using rule 19
	'false'        reduce using rule 19
	'for'          reduce using rule 19
	'if'           reduce using rule 19
	'int'          reduce using rule 19
	'new'          reduce using rule 19
	'return'       reduce using rule 19
	'string'       reduce using rule 19
	'true'         reduce using rule 19
	'void'         reduce using rule 19
	'while'        reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	L_Ident        reduce using rule 19
	L_integ        reduce using rule 19
	L_quoted       reduce using rule 19
	%eof           reduce using rule 19


State 108

	Expr7 -> Ident '(' . ListExpr ')'                   (rule 52)

	'!'            shift, and enter state 53
	'('            shift, and enter state 54
	')'            reduce using rule 77
	'-'            shift, and enter state 55
	'false'        shift, and enter state 57
	'new'          shift, and enter state 60
	'true'         shift, and enter state 62
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_quoted       shift, and enter state 65

	Ident          goto state 70
	Integer        goto state 38
	String         goto state 39
	Expr8          goto state 71
	Expr7          goto state 45
	Expr6          goto state 46
	Expr5          goto state 47
	Expr4          goto state 48
	Expr3          goto state 49
	Expr2          goto state 50
	Expr1          goto state 51
	Expr           goto state 109
	ListExpr       goto state 110

State 109

	ListExpr -> Expr .                                  (rule 78)
	ListExpr -> Expr . ',' ListExpr                     (rule 79)

	')'            reduce using rule 78
	','            shift, and enter state 144


State 110

	Expr7 -> Ident '(' ListExpr . ')'                   (rule 52)

	')'            shift, and enter state 143


State 111

	Stmt -> Type ListItem ';' .                         (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'boolean'      reduce using rule 24
	'else'         reduce using rule 24
	'false'        reduce using rule 24
	'for'          reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'new'          reduce using rule 24
	'return'       reduce using rule 24
	'string'       reduce using rule 24
	'true'         reduce using rule 24
	'void'         reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_Ident        reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24


State 112

	ListItem -> Item ',' . ListItem                     (rule 38)

	L_Ident        shift, and enter state 2

	Ident          goto state 103
	Item           goto state 104
	ListItem       goto state 142

State 113

	Item -> Ident '=' . Expr                            (rule 36)

	'!'            shift, and enter state 53
	'('            shift, and enter state 54
	'-'            shift, and enter state 55
	'false'        shift, and enter state 57
	'new'          shift, and enter state 60
	'true'         shift, and enter state 62
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_quoted       shift, and enter state 65

	Ident          goto state 70
	Integer        goto state 38
	String         goto state 39
	Expr8          goto state 71
	Expr7          goto state 45
	Expr6          goto state 46
	Expr5          goto state 47
	Expr4          goto state 48
	Expr3          goto state 49
	Expr2          goto state 50
	Expr1          goto state 51
	Expr           goto state 141

State 114

	Stmt -> Expr8 '=' Expr . ';'                        (rule 25)

	';'            shift, and enter state 140


State 115

	Stmt -> Expr8 '--' ';' .                            (rule 27)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	'-'            reduce using rule 27
	';'            reduce using rule 27
	'boolean'      reduce using rule 27
	'else'         reduce using rule 27
	'false'        reduce using rule 27
	'for'          reduce using rule 27
	'if'           reduce using rule 27
	'int'          reduce using rule 27
	'new'          reduce using rule 27
	'return'       reduce using rule 27
	'string'       reduce using rule 27
	'true'         reduce using rule 27
	'void'         reduce using rule 27
	'while'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	L_Ident        reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27


State 116

	Stmt -> Expr8 '++' ';' .                            (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'boolean'      reduce using rule 26
	'else'         reduce using rule 26
	'false'        reduce using rule 26
	'for'          reduce using rule 26
	'if'           reduce using rule 26
	'int'          reduce using rule 26
	'new'          reduce using rule 26
	'return'       reduce using rule 26
	'string'       reduce using rule 26
	'true'         reduce using rule 26
	'void'         reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_Ident        reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26


State 117

	Expr8 -> Expr7 '[' Expr . ']'                       (rule 49)

	']'            shift, and enter state 139


State 118

	Expr8 -> Expr7 '.' Ident .                          (rule 50)
	Expr7 -> Expr7 '.' Ident . '(' ListExpr ')'         (rule 53)

	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'&&'           reduce using rule 50
	'('            shift, and enter state 138
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	'++'           reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'--'           reduce using rule 50
	'.'            reduce using rule 50
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'='            reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'['            reduce using rule 50
	']'            reduce using rule 50
	'||'           reduce using rule 50


State 119

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 67)

	'!='           reduce using rule 67
	'%'            reduce using rule 67
	'&&'           reduce using rule 67
	')'            reduce using rule 67
	'*'            reduce using rule 67
	'+'            reduce using rule 67
	','            reduce using rule 67
	'-'            reduce using rule 67
	'/'            reduce using rule 67
	';'            reduce using rule 67
	'<'            reduce using rule 67
	'<='           reduce using rule 67
	'=='           reduce using rule 67
	'>'            reduce using rule 67
	'>='           reduce using rule 67
	']'            reduce using rule 67
	'||'           reduce using rule 67


State 120

	Expr4 -> Expr4 . MulOp Expr5                        (rule 67)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 69)

	'!='           reduce using rule 69
	'%'            shift, and enter state 95
	'&&'           reduce using rule 69
	')'            reduce using rule 69
	'*'            shift, and enter state 96
	'+'            reduce using rule 69
	','            reduce using rule 69
	'-'            reduce using rule 69
	'/'            shift, and enter state 97
	';'            reduce using rule 69
	'<'            reduce using rule 69
	'<='           reduce using rule 69
	'=='           reduce using rule 69
	'>'            reduce using rule 69
	'>='           reduce using rule 69
	']'            reduce using rule 69
	'||'           reduce using rule 69

	MulOp          goto state 94

State 121

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 73)

	')'            reduce using rule 73
	','            reduce using rule 73
	';'            reduce using rule 73
	']'            reduce using rule 73
	'||'           reduce using rule 73


State 122

	Expr3 -> Expr3 . AddOp Expr4                        (rule 69)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 71)

	'!='           reduce using rule 71
	'&&'           reduce using rule 71
	')'            reduce using rule 71
	'+'            shift, and enter state 92
	','            reduce using rule 71
	'-'            shift, and enter state 93
	';'            reduce using rule 71
	'<'            reduce using rule 71
	'<='           reduce using rule 71
	'=='           reduce using rule 71
	'>'            reduce using rule 71
	'>='           reduce using rule 71
	']'            reduce using rule 71
	'||'           reduce using rule 71

	AddOp          goto state 91

State 123

	Expr -> Expr1 '||' Expr .                           (rule 75)

	')'            reduce using rule 75
	','            reduce using rule 75
	';'            reduce using rule 75
	']'            reduce using rule 75


State 124

	Expr8 -> '(' Expr ')' .                             (rule 51)

	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	'++'           reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'--'           reduce using rule 51
	'.'            reduce using rule 51
	'/'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'='            reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'['            reduce using rule 51
	']'            reduce using rule 51
	'||'           reduce using rule 51


State 125

	Expr6 -> '(' Type ')null' .                         (rule 58)

	'!='           reduce using rule 58
	'%'            reduce using rule 58
	'&&'           reduce using rule 58
	')'            reduce using rule 58
	'*'            reduce using rule 58
	'+'            reduce using rule 58
	','            reduce using rule 58
	'-'            reduce using rule 58
	'/'            reduce using rule 58
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	']'            reduce using rule 58
	'||'           reduce using rule 58


State 126

	Stmt -> 'for' '(' Type . Ident ':' Expr ')' Stmt    (rule 33)
	Type -> Type . '[]'                                 (rule 43)

	'[]'           shift, and enter state 15
	L_Ident        shift, and enter state 2

	Ident          goto state 137

State 127

	Stmt -> 'if' '(' Expr . ')' Stmt                    (rule 30)
	Stmt -> 'if' '(' Expr . ')' Stmt 'else' Stmt        (rule 31)

	')'            shift, and enter state 136


State 128

	Expr7 -> 'new' Type EArrLen .                       (rule 54)

	'!='           reduce using rule 54
	'%'            reduce using rule 54
	'&&'           reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'+'            reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'.'            reduce using rule 54
	'/'            reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'['            reduce using rule 54
	']'            reduce using rule 54
	'||'           reduce using rule 54


State 129

	EArrLen -> '[' . Expr ']'                           (rule 56)

	'!'            shift, and enter state 53
	'('            shift, and enter state 54
	'-'            shift, and enter state 55
	'false'        shift, and enter state 57
	'new'          shift, and enter state 60
	'true'         shift, and enter state 62
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_quoted       shift, and enter state 65

	Ident          goto state 70
	Integer        goto state 38
	String         goto state 39
	Expr8          goto state 71
	Expr7          goto state 45
	Expr6          goto state 46
	Expr5          goto state 47
	Expr4          goto state 48
	Expr3          goto state 49
	Expr2          goto state 50
	Expr1          goto state 51
	Expr           goto state 135

State 130

	Stmt -> 'return' Expr ';' .                         (rule 28)

	'!'            reduce using rule 28
	'('            reduce using rule 28
	'-'            reduce using rule 28
	';'            reduce using rule 28
	'boolean'      reduce using rule 28
	'else'         reduce using rule 28
	'false'        reduce using rule 28
	'for'          reduce using rule 28
	'if'           reduce using rule 28
	'int'          reduce using rule 28
	'new'          reduce using rule 28
	'return'       reduce using rule 28
	'string'       reduce using rule 28
	'true'         reduce using rule 28
	'void'         reduce using rule 28
	'while'        reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	L_Ident        reduce using rule 28
	L_integ        reduce using rule 28
	L_quoted       reduce using rule 28


State 131

	Stmt -> 'while' '(' Expr . ')' Stmt                 (rule 32)

	')'            shift, and enter state 134


State 132

	ClsMem -> Type Ident '(' ListArg ')' . Block        (rule 12)

	'{'            shift, and enter state 36

	Block          goto state 133

State 133

	ClsMem -> Type Ident '(' ListArg ')' Block .        (rule 12)

	'boolean'      reduce using rule 12
	'int'          reduce using rule 12
	'string'       reduce using rule 12
	'void'         reduce using rule 12
	'}'            reduce using rule 12
	L_Ident        reduce using rule 12


State 134

	Stmt -> 'while' '(' Expr ')' . Stmt                 (rule 32)

	'!'            shift, and enter state 53
	'('            shift, and enter state 54
	'-'            shift, and enter state 55
	';'            shift, and enter state 56
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 57
	'for'          shift, and enter state 58
	'if'           shift, and enter state 59
	'int'          shift, and enter state 10
	'new'          shift, and enter state 60
	'return'       shift, and enter state 61
	'string'       shift, and enter state 11
	'true'         shift, and enter state 62
	'void'         shift, and enter state 12
	'while'        shift, and enter state 63
	'{'            shift, and enter state 36
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_quoted       shift, and enter state 65

	Ident          goto state 37
	Integer        goto state 38
	String         goto state 39
	Block          goto state 40
	Stmt           goto state 150
	Type           goto state 43
	Expr8          goto state 44
	Expr7          goto state 45
	Expr6          goto state 46
	Expr5          goto state 47
	Expr4          goto state 48
	Expr3          goto state 49
	Expr2          goto state 50
	Expr1          goto state 51
	Expr           goto state 52

State 135

	EArrLen -> '[' Expr . ']'                           (rule 56)

	']'            shift, and enter state 149


State 136

	Stmt -> 'if' '(' Expr ')' . Stmt                    (rule 30)
	Stmt -> 'if' '(' Expr ')' . Stmt 'else' Stmt        (rule 31)

	'!'            shift, and enter state 53
	'('            shift, and enter state 54
	'-'            shift, and enter state 55
	';'            shift, and enter state 56
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 57
	'for'          shift, and enter state 58
	'if'           shift, and enter state 59
	'int'          shift, and enter state 10
	'new'          shift, and enter state 60
	'return'       shift, and enter state 61
	'string'       shift, and enter state 11
	'true'         shift, and enter state 62
	'void'         shift, and enter state 12
	'while'        shift, and enter state 63
	'{'            shift, and enter state 36
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_quoted       shift, and enter state 65

	Ident          goto state 37
	Integer        goto state 38
	String         goto state 39
	Block          goto state 40
	Stmt           goto state 148
	Type           goto state 43
	Expr8          goto state 44
	Expr7          goto state 45
	Expr6          goto state 46
	Expr5          goto state 47
	Expr4          goto state 48
	Expr3          goto state 49
	Expr2          goto state 50
	Expr1          goto state 51
	Expr           goto state 52

State 137

	Stmt -> 'for' '(' Type Ident . ':' Expr ')' Stmt    (rule 33)

	':'            shift, and enter state 147


State 138

	Expr7 -> Expr7 '.' Ident '(' . ListExpr ')'         (rule 53)

	'!'            shift, and enter state 53
	'('            shift, and enter state 54
	')'            reduce using rule 77
	'-'            shift, and enter state 55
	'false'        shift, and enter state 57
	'new'          shift, and enter state 60
	'true'         shift, and enter state 62
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_quoted       shift, and enter state 65

	Ident          goto state 70
	Integer        goto state 38
	String         goto state 39
	Expr8          goto state 71
	Expr7          goto state 45
	Expr6          goto state 46
	Expr5          goto state 47
	Expr4          goto state 48
	Expr3          goto state 49
	Expr2          goto state 50
	Expr1          goto state 51
	Expr           goto state 109
	ListExpr       goto state 146

State 139

	Expr8 -> Expr7 '[' Expr ']' .                       (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	'++'           reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'--'           reduce using rule 49
	'.'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'='            reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'['            reduce using rule 49
	']'            reduce using rule 49
	'||'           reduce using rule 49


State 140

	Stmt -> Expr8 '=' Expr ';' .                        (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'boolean'      reduce using rule 25
	'else'         reduce using rule 25
	'false'        reduce using rule 25
	'for'          reduce using rule 25
	'if'           reduce using rule 25
	'int'          reduce using rule 25
	'new'          reduce using rule 25
	'return'       reduce using rule 25
	'string'       reduce using rule 25
	'true'         reduce using rule 25
	'void'         reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_Ident        reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25


State 141

	Item -> Ident '=' Expr .                            (rule 36)

	','            reduce using rule 36
	';'            reduce using rule 36


State 142

	ListItem -> Item ',' ListItem .                     (rule 38)

	';'            reduce using rule 38


State 143

	Expr7 -> Ident '(' ListExpr ')' .                   (rule 52)

	'!='           reduce using rule 52
	'%'            reduce using rule 52
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	'*'            reduce using rule 52
	'+'            reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'.'            reduce using rule 52
	'/'            reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'['            reduce using rule 52
	']'            reduce using rule 52
	'||'           reduce using rule 52


State 144

	ListExpr -> Expr ',' . ListExpr                     (rule 79)

	'!'            shift, and enter state 53
	'('            shift, and enter state 54
	')'            reduce using rule 77
	'-'            shift, and enter state 55
	'false'        shift, and enter state 57
	'new'          shift, and enter state 60
	'true'         shift, and enter state 62
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_quoted       shift, and enter state 65

	Ident          goto state 70
	Integer        goto state 38
	String         goto state 39
	Expr8          goto state 71
	Expr7          goto state 45
	Expr6          goto state 46
	Expr5          goto state 47
	Expr4          goto state 48
	Expr3          goto state 49
	Expr2          goto state 50
	Expr1          goto state 51
	Expr           goto state 109
	ListExpr       goto state 145

State 145

	ListExpr -> Expr ',' ListExpr .                     (rule 79)

	')'            reduce using rule 79


State 146

	Expr7 -> Expr7 '.' Ident '(' ListExpr . ')'         (rule 53)

	')'            shift, and enter state 153


State 147

	Stmt -> 'for' '(' Type Ident ':' . Expr ')' Stmt    (rule 33)

	'!'            shift, and enter state 53
	'('            shift, and enter state 54
	'-'            shift, and enter state 55
	'false'        shift, and enter state 57
	'new'          shift, and enter state 60
	'true'         shift, and enter state 62
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_quoted       shift, and enter state 65

	Ident          goto state 70
	Integer        goto state 38
	String         goto state 39
	Expr8          goto state 71
	Expr7          goto state 45
	Expr6          goto state 46
	Expr5          goto state 47
	Expr4          goto state 48
	Expr3          goto state 49
	Expr2          goto state 50
	Expr1          goto state 51
	Expr           goto state 152

State 148

	Stmt -> 'if' '(' Expr ')' Stmt .                    (rule 30)
	Stmt -> 'if' '(' Expr ')' Stmt . 'else' Stmt        (rule 31)

	'!'            reduce using rule 30
	'('            reduce using rule 30
	'-'            reduce using rule 30
	';'            reduce using rule 30
	'boolean'      reduce using rule 30
	'else'         shift, and enter state 151
			(reduce using rule 30)

	'false'        reduce using rule 30
	'for'          reduce using rule 30
	'if'           reduce using rule 30
	'int'          reduce using rule 30
	'new'          reduce using rule 30
	'return'       reduce using rule 30
	'string'       reduce using rule 30
	'true'         reduce using rule 30
	'void'         reduce using rule 30
	'while'        reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	L_Ident        reduce using rule 30
	L_integ        reduce using rule 30
	L_quoted       reduce using rule 30


State 149

	EArrLen -> '[' Expr ']' .                           (rule 56)

	'!='           reduce using rule 56
	'%'            reduce using rule 56
	'&&'           reduce using rule 56
	')'            reduce using rule 56
	'*'            reduce using rule 56
	'+'            reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'.'            reduce using rule 56
	'/'            reduce using rule 56
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	'['            reduce using rule 56
	']'            reduce using rule 56
	'||'           reduce using rule 56


State 150

	Stmt -> 'while' '(' Expr ')' Stmt .                 (rule 32)

	'!'            reduce using rule 32
	'('            reduce using rule 32
	'-'            reduce using rule 32
	';'            reduce using rule 32
	'boolean'      reduce using rule 32
	'else'         reduce using rule 32
	'false'        reduce using rule 32
	'for'          reduce using rule 32
	'if'           reduce using rule 32
	'int'          reduce using rule 32
	'new'          reduce using rule 32
	'return'       reduce using rule 32
	'string'       reduce using rule 32
	'true'         reduce using rule 32
	'void'         reduce using rule 32
	'while'        reduce using rule 32
	'{'            reduce using rule 32
	'}'            reduce using rule 32
	L_Ident        reduce using rule 32
	L_integ        reduce using rule 32
	L_quoted       reduce using rule 32


State 151

	Stmt -> 'if' '(' Expr ')' Stmt 'else' . Stmt        (rule 31)

	'!'            shift, and enter state 53
	'('            shift, and enter state 54
	'-'            shift, and enter state 55
	';'            shift, and enter state 56
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 57
	'for'          shift, and enter state 58
	'if'           shift, and enter state 59
	'int'          shift, and enter state 10
	'new'          shift, and enter state 60
	'return'       shift, and enter state 61
	'string'       shift, and enter state 11
	'true'         shift, and enter state 62
	'void'         shift, and enter state 12
	'while'        shift, and enter state 63
	'{'            shift, and enter state 36
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_quoted       shift, and enter state 65

	Ident          goto state 37
	Integer        goto state 38
	String         goto state 39
	Block          goto state 40
	Stmt           goto state 155
	Type           goto state 43
	Expr8          goto state 44
	Expr7          goto state 45
	Expr6          goto state 46
	Expr5          goto state 47
	Expr4          goto state 48
	Expr3          goto state 49
	Expr2          goto state 50
	Expr1          goto state 51
	Expr           goto state 52

State 152

	Stmt -> 'for' '(' Type Ident ':' Expr . ')' Stmt    (rule 33)

	')'            shift, and enter state 154


State 153

	Expr7 -> Expr7 '.' Ident '(' ListExpr ')' .         (rule 53)

	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'&&'           reduce using rule 53
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'+'            reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'.'            reduce using rule 53
	'/'            reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'['            reduce using rule 53
	']'            reduce using rule 53
	'||'           reduce using rule 53


State 154

	Stmt -> 'for' '(' Type Ident ':' Expr ')' . Stmt    (rule 33)

	'!'            shift, and enter state 53
	'('            shift, and enter state 54
	'-'            shift, and enter state 55
	';'            shift, and enter state 56
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 57
	'for'          shift, and enter state 58
	'if'           shift, and enter state 59
	'int'          shift, and enter state 10
	'new'          shift, and enter state 60
	'return'       shift, and enter state 61
	'string'       shift, and enter state 11
	'true'         shift, and enter state 62
	'void'         shift, and enter state 12
	'while'        shift, and enter state 63
	'{'            shift, and enter state 36
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 64
	L_quoted       shift, and enter state 65

	Ident          goto state 37
	Integer        goto state 38
	String         goto state 39
	Block          goto state 40
	Stmt           goto state 156
	Type           goto state 43
	Expr8          goto state 44
	Expr7          goto state 45
	Expr6          goto state 46
	Expr5          goto state 47
	Expr4          goto state 48
	Expr3          goto state 49
	Expr2          goto state 50
	Expr1          goto state 51
	Expr           goto state 52

State 155

	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt .        (rule 31)

	'!'            reduce using rule 31
	'('            reduce using rule 31
	'-'            reduce using rule 31
	';'            reduce using rule 31
	'boolean'      reduce using rule 31
	'else'         reduce using rule 31
	'false'        reduce using rule 31
	'for'          reduce using rule 31
	'if'           reduce using rule 31
	'int'          reduce using rule 31
	'new'          reduce using rule 31
	'return'       reduce using rule 31
	'string'       reduce using rule 31
	'true'         reduce using rule 31
	'void'         reduce using rule 31
	'while'        reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	L_Ident        reduce using rule 31
	L_integ        reduce using rule 31
	L_quoted       reduce using rule 31


State 156

	Stmt -> 'for' '(' Type Ident ':' Expr ')' Stmt .    (rule 33)

	'!'            reduce using rule 33
	'('            reduce using rule 33
	'-'            reduce using rule 33
	';'            reduce using rule 33
	'boolean'      reduce using rule 33
	'else'         reduce using rule 33
	'false'        reduce using rule 33
	'for'          reduce using rule 33
	'if'           reduce using rule 33
	'int'          reduce using rule 33
	'new'          reduce using rule 33
	'return'       reduce using rule 33
	'string'       reduce using rule 33
	'true'         reduce using rule 33
	'void'         reduce using rule 33
	'while'        reduce using rule 33
	'{'            reduce using rule 33
	'}'            reduce using rule 33
	L_Ident        reduce using rule 33
	L_integ        reduce using rule 33
	L_quoted       reduce using rule 33


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 91
Number of terminals: 46
Number of non-terminals: 33
Number of states: 157
